FROM ubuntu:16.04
ARG DEBIAN_FRONTEND=noninteractive

COPY common.sh lib.sh /
RUN /common.sh

COPY cmake.sh /
RUN /cmake.sh

COPY xargo.sh /
RUN /xargo.sh

RUN apt-get update && apt-get install --assume-yes --no-install-recommends \
    g++-arm-linux-gnueabi \
    crossbuild-essential-armel \
    libc6-dev-armel-cross

#RUN apt-get install -y bluetooth libbluetooth-dev libudev-dev
#RUN apt-get install -y gcc-multilib g++-multilib
RUN apt-get install -y \
    wget \
    gawk \
    flex \
    bison \
    pkg-config \
    autoconf-archive

#\
#    libbluetooth-dev

COPY deny-debian-packages.sh /
RUN TARGET_ARCH=armel /deny-debian-packages.sh \
    binutils \
    binutils-arm-linux-gnueabi

# Qemu is disabled since we've changed the scripts to require newer Python versions.
#COPY qemu.sh /
#RUN /qemu.sh arm

COPY qemu-runner base-runner.sh /

ENV CROSS_TOOLCHAIN_PREFIX=arm-linux-gnueabi-
ENV CROSS_SYSROOT=/usr/arm-linux-gnueabi
ENV CARGO_TARGET_ARMV5TE_UNKNOWN_LINUX_GNUEABI_LINKER="$CROSS_TOOLCHAIN_PREFIX"gcc \
    CARGO_TARGET_ARMV5TE_UNKNOWN_LINUX_GNUEABI_RUNNER="/qemu-runner arm" \
    AR_armv5te_unknown_linux_gnueabi="$CROSS_TOOLCHAIN_PREFIX"ar \
    CC_armv5te_unknown_linux_gnueabi="$CROSS_TOOLCHAIN_PREFIX"gcc \
    CXX_armv5te_unknown_linux_gnueabi="$CROSS_TOOLCHAIN_PREFIX"g++ \
    BINDGEN_EXTRA_CLANG_ARGS_armv5te_unknown_linux_gnueabi="--sysroot=$CROSS_SYSROOT" \
    QEMU_LD_PREFIX="$CROSS_SYSROOT" \
    RUST_TEST_THREADS=1 \
    PKG_CONFIG_PATH="/usr/lib/arm-linux-gnueabi/pkgconfig/:${PKG_CONFIG_PATH}"

#EXPAT
RUN wget https://github.com/RedIODev/libexpat-ev3/archive/refs/tags/1.0.tar.gz && \
    tar -xvf 1.0.tar.gz && \
    cd libexpat-ev3-1.0/ && \
    mkdir _build && \
    cd _build && \
    cmake ../expat -DCMAKE_TOOLCHAIN_FILE=../expat/cmake/cross-toolchain.cmake && \
    # ./buildconf.sh && \
    # autoconf && \
    # ./configure --target=arm-linux-gnueabi --build=i686-pc-linux-gnu -host=armv5te-unknown-linux-gnu --prefix= PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig  && \
    make CC=$CC_armv5te_unknown_linux_gnueabi && \
    make install DESTDIR=/usr/arm-linux-gnueabi && \
    make install DESTDIR=/home/export/rootfs 

#DBUS
RUN wget https://github.com/RedIODev/dbus-ev3/releases/download/1.1/dbus-dbus-1.4.24.tar.gz && \
    tar -xvf dbus-dbus-1.4.24.tar.gz && \
    cd dbus-dbus-1.4.24 && \
    mkdir _build && \
    cd _build && \
    cmake ../cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/cross-toolchain.cmake -DDBUS_SESSION_SOCKET_DIR=./tmp && \
    # aclocal && \
    # autoconf && \
    # ./configure --target=arm-linux-gnueabi --build=i686-pc-linux-gnu -host=armv5te-unknown-linux-gnu --prefix= PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig  && \
    make CC=$CC_armv5te_unknown_linux_gnueabi && \
    make install DESTDIR=/usr/arm-linux-gnueabi && \
    make install DESTDIR=/home/export/rootfs 
    #&& f
#BLUEZ bluetooth
RUN wget https://github.com/bluez/bluez/archive/refs/tags/4.101.tar.gz  && \
    tar -xvf 4.101.tar.gz && \
    cd bluez-4.101 && \
    autoreconf --install -I /home/export/rootfs/usr/local/lib/ && \
    # libtoolize --force && \
    # aclocal && \
    # automake --force-missing --add-missing && \
    # autoreconf -I/usr/arm-linux-gnueabi && \
    # autoheader && \
    # autoconf && \
    ./configure --target=arm-linux-gnueabi --prefix= PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig && \
    #--build=i686-pc-linux-gnu -host=armv5te-unknown-linux-gnu 
    make CC=$CC_armv5te_unknown_linux_gnueabi && \
    make install DESTDIR=/usr/arm-linux-gnueabi && \
    make install DESTDIR=/home/export/rootfs 
#CWIID
RUN wget https://github.com/RedIODev/cwiid/archive/refs/tags/1.6.tar.gz && \
    tar -xvf 1.6.tar.gz && \
    cd cwiid-1.6 && \
    autoconf && \
    ./configure --without-python --target=arm-linux-gnueabi --build=i686-pc-linux-gnu -host=armv5te-unknown-linux-gnu --prefix= PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig  && \
    make CC=$CC_armv5te_unknown_linux_gnueabi && \
    make install DESTDIR=/usr/arm-linux-gnueabi && \
    make install DESTDIR=/home/export/rootfs && \
    file /home/export/rootfs/lib/libcwiid.so.1.0 && \
    fg
# RUN apt-get install -y wget

# RUN wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.50.tar.xz 
# RUN tar -xJf bluez-4.50.tar.xz 
# RUN cd bluez-4.50 && ./configure --target=arm-linux-gnueabi --prefix= PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig --disable-systemd --disable-udev --disable-cups --disable-obex --enable-library
# RUN make
# RUN make install DESTDIR=/usr/arm-linux-gnueabi
# RUN make install DESTDIR=/home/export/rootfs